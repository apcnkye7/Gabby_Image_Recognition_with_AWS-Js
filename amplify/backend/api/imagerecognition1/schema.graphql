type CelebrityImageMetdata {
	ImageKey: String!
	Timestamp: String!
	celebrityName: String
	confidence: Float
	createdAt: String
	description: String
	name: String
	url: String
}

type CelebrityImageMetdataConnection {
	items: [CelebrityImageMetdata]
	nextToken: String
}

input CreateCelebrityImageMetdataInput {
	ImageKey: String!
	Timestamp: String!
	celebrityName: String
	confidence: Float
	createdAt: String
	description: String
	name: String
	url: String
}

input DeleteCelebrityImageMetdataInput {
	ImageKey: String!
	Timestamp: String!
}

input ModelSizeInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	between: [Int]
}

input TableBooleanFilterInput {
	ne: Boolean
	eq: Boolean
	attributeExists: Boolean
}

input TableCelebrityImageMetdataFilterInput {
	ImageKey: TableStringFilterInput
	Timestamp: TableStringFilterInput
	celebrityName: TableStringFilterInput
	confidence: TableFloatFilterInput
	createdAt: TableStringFilterInput
	description: TableStringFilterInput
	name: TableStringFilterInput
	url: TableStringFilterInput
}

input TableFloatFilterInput {
	ne: Float
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
	between: [Float]
	attributeExists: Boolean
}

input TableIDFilterInput {
	ne: ID
	eq: ID
	le: ID
	lt: ID
	ge: ID
	gt: ID
	contains: ID
	notContains: ID
	between: [ID]
	beginsWith: ID
	attributeExists: Boolean
	size: ModelSizeInput
}

input TableIntFilterInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	between: [Int]
	attributeExists: Boolean
}

input TableStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
	attributeExists: Boolean
	size: ModelSizeInput
}

input UpdateCelebrityImageMetdataInput {
	ImageKey: String!
	Timestamp: String!
	celebrityName: String
	confidence: Float
	createdAt: String
	description: String
	name: String
	url: String
}

type Mutation {
	createCelebrityImageMetdata(input: CreateCelebrityImageMetdataInput!): CelebrityImageMetdata
	updateCelebrityImageMetdata(input: UpdateCelebrityImageMetdataInput!): CelebrityImageMetdata
	deleteCelebrityImageMetdata(input: DeleteCelebrityImageMetdataInput!): CelebrityImageMetdata
}

type Query {
	getCelebrityImageMetdata(ImageKey: String!, Timestamp: String!): CelebrityImageMetdata
	listCelebrityImageMetdata(filter: TableCelebrityImageMetdataFilterInput, limit: Int, nextToken: String): CelebrityImageMetdataConnection
}

type Subscription {
	onCreateCelebrityImageMetdata(
		ImageKey: String,
		Timestamp: String,
		celebrityName: String,
		confidence: Float,
		createdAt: String
	): CelebrityImageMetdata
		@aws_subscribe(mutations: ["createCelebrityImageMetdata"])
	onUpdateCelebrityImageMetdata(
		ImageKey: String,
		Timestamp: String,
		celebrityName: String,
		confidence: Float,
		createdAt: String
	): CelebrityImageMetdata
		@aws_subscribe(mutations: ["updateCelebrityImageMetdata"])
	onDeleteCelebrityImageMetdata(
		ImageKey: String,
		Timestamp: String,
		celebrityName: String,
		confidence: Float,
		createdAt: String
	): CelebrityImageMetdata
		@aws_subscribe(mutations: ["deleteCelebrityImageMetdata"])
}